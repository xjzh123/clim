/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI973078607 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI973078613 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI553648451 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1073741846 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1090519043 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1073741844 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1073741841 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1073741838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1073741829 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1073741828 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1073741827 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845655 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI805306758 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
NTI805306758.base = NTI33554449;
var NNI1291845655 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1291845655.node = NNI1291845655;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555178.base = NTI33555177;
NTI134217753.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555178;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
var NNI1073741827 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1073741827, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1073741827, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1073741827, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1073741827, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1073741827, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1073741827, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1073741827, name: "JArray", len: 0, sons: null}}};
NTI1073741827.node = NNI1073741827;
var NNI1073741844 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1090519043, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1073741828, name: "Field3", sons: null}]};
NTI1073741844.node = NNI1073741844;
NTI1073741841.base = NTI1073741844;
var NNI1073741838 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1073741841, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1073741838.node = NNI1073741838;
NTI1073741846.base = NTI1073741828;
var NNI1073741829 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1073741827, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1073741838, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1073741846, name: "elems", sons: null}]]}]};
NTI1073741829.node = NNI1073741829;
NTI1073741828.base = NTI1073741829;
NTI553648451.base = NTI33554449;
var NNI973078613 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI973078607, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI973078613.node = NNI973078613;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}
var ConstSet2 = setConstr(58, 61);
var ConstSet3 = setConstr(45);

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet4 = setConstr([65, 90]);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet7 = setConstr(6);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557616;

}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function genericReset(x_33557306, ti_33557307) {
  var result_33557308 = null;

    result_33557308 = null;
    switch (ti_33557307.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557259(ti_33557307)) {
              result_33557308 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557308 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557307.kind == 17)) {
      result_33557308 = {m_type: ti_33557307};
      }
      else {
        result_33557308 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557308 = [];
    
      break;
    case 4:
    case 16:
            result_33557308 = new Array(x_33557306.length);
      for (var i = 0; i < x_33557306.length; ++i) {
        result_33557308[i] = genericReset(x_33557306[i], ti_33557307.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557308;

}
var ConstSet8 = setConstr(5);

function cmpStrings(a_33557033, b_33557034) {
        if (a_33557033 == b_33557034) return 0;
    if (!a_33557033) return -1;
    if (!b_33557034) return 1;
    for (var i = 0; i < a_33557033.length && i < b_33557034.length; i++) {
      var result = a_33557033[i] - b_33557034[i];
      if (result != 0) return result;
    }
    return a_33557033.length - b_33557034.length;
  

  
}
var ConstSet9 = setConstr(60, 62, 94);
var ConstSet10 = setConstr(60, 62, 94);
var ConstSet11 = setConstr(45, 43, 32);
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet16 = setConstr(6);
var ConstSet17 = setConstr(5);
var ConstSet18 = setConstr(6);
var ConstSet19 = setConstr(5);
var ConstSet20 = setConstr(4);
var ConstSet21 = setConstr(4);
var ConstSet22 = setConstr(2);
var ConstSet23 = setConstr(3);
var ConstSet24 = setConstr(1);
var objectID_1090519217 = [0];

function nextPowerOfTwo_822083827(x_822083828) {
  var result_822083829 = 0;

    result_822083829 = (x_822083828 - 1);
    result_822083829 = (result_822083829 | (result_822083829 >> 16));
    result_822083829 = (result_822083829 | (result_822083829 >> 8));
    result_822083829 = (result_822083829 | (result_822083829 >> 4));
    result_822083829 = (result_822083829 | (result_822083829 >> 2));
    result_822083829 = (result_822083829 | (result_822083829 >> 1));
    result_822083829 += (1 + ((x_822083828 <= 0) ? 1 : 0));

  return result_822083829;

}

function slotsNeeded_1124073514(count_1124073515) {
  var result_1124073516 = 0;

    result_1124073516 = nextPowerOfTwo_822083827((Math.trunc((count_1124073515 * 3) / 2) + 4));

  return result_1124073516;

}

function initOrderedTable_1073741956(initialSize_1073741959) {
  var result_1073741960 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1073741962 = slotsNeeded_1124073514(initialSize_1073741959);
    result_1073741960.counter = 0;
    result_1073741960.data = new Array(correctSizeHEX60gensym0_1073741962); for (var i = 0 ; i < correctSizeHEX60gensym0_1073741962 ; ++i) { result_1073741960.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1073741960.first = (-1);
    result_1073741960.last = (-1);

  return result_1073741960;

}

function newJObject_1073741954() {
  var result_1073741955 = null;

    result_1073741955 = {kind: 5, fields: initOrderedTable_1073741956(2), isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, elems: []};

  return result_1073741955;

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

    var first_33558084 = nimMax(first_33558081, 0);
    var L_33558085 = nimMax(((nimMin(last_33558082, (s_33558080).length - 1) - first_33558084) + 1), 0);
    result_33558083 = nimCopy(null, mnewString(L_33558085), NTI33554449);
    Label1: {
      var i_33558090 = 0;
      var colontmp__553648656 = 0;
      colontmp__553648656 = (L_33558085 - 1);
      var res_553648657 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_553648657 <= colontmp__553648656)) break Label3;
            i_33558090 = res_553648657;
            result_33558083[i_33558090] = s_33558080[(i_33558090 + first_33558084)];
            res_553648657 += 1;
          }
      };
    };

  return result_33558083;

}

function nsuSplitCharSet(s_805306926, seps_805306927, maxsplit_805306928) {
  var result_805306929 = [];

    result_805306929 = nimCopy(null, [], NTI805306758);
    Label1: {
      var xHEX60gensym68_805306935 = [];
      var lastHEX60gensym37_553648650 = 0;
      var splitsHEX60gensym37_553648651 = maxsplit_805306928;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym37_553648650 <= (s_805306926).length)) break Label3;
            var firstHEX60gensym37_553648653 = lastHEX60gensym37_553648650;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym37_553648650 < (s_805306926).length) && !((seps_805306927[s_805306926[lastHEX60gensym37_553648650]] != undefined)))) break Label5;
                  lastHEX60gensym37_553648650 += 1;
                }
            };
            if ((splitsHEX60gensym37_553648651 == 0)) {
            lastHEX60gensym37_553648650 = (s_805306926).length;
            }
            
            xHEX60gensym68_805306935 = substr_33558079(s_805306926, firstHEX60gensym37_553648653, (lastHEX60gensym37_553648650 - 1));
            var Temporary6 = nimCopy(null, xHEX60gensym68_805306935, NTI33554449);
            result_805306929.push(Temporary6);;
            if ((splitsHEX60gensym37_553648651 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym37_553648651 -= 1;
            lastHEX60gensym37_553648650 += 1;
          }
      };
    };

  return result_805306929;

}

function nsuStrip(s_805308822, leading_805308823, trailing_805308824, chars_805308825) {
  var result_805308826 = [];

    var first_805308827 = 0;
    var last_805308828 = ((s_805308822).length - 1);
    if (leading_805308823) {
    Label1: {
        Label2: while (true) {
        if (!((first_805308827 <= last_805308828) && (chars_805308825[s_805308822[first_805308827]] != undefined))) break Label2;
          first_805308827 += 1;
        }
    };
    }
    
    if (trailing_805308824) {
    Label3: {
        Label4: while (true) {
        if (!((first_805308827 <= last_805308828) && (chars_805308825[s_805308822[last_805308828]] != undefined))) break Label4;
          last_805308828 -= 1;
        }
    };
    }
    
    result_805308826 = nimCopy(null, substr_33558079(s_805308822, first_805308827, last_805308828), NTI33554449);

  return result_805308826;

}

function getParam_1291845666(param_1291845667) {
    var Temporary1;

  var result_1291845668 = {Field0: [], Field1: [], Field2: []};

    var tmp_1291845669 = nsuSplitCharSet(param_1291845667, ConstSet2, 1);
    var prefix_1291845670 = nimCopy(null, tmp_1291845669[0], NTI33554449);
    var name_1291845671 = nsuStrip(prefix_1291845670, true, false, ConstSet3);
    if (((tmp_1291845669).length == 1)) {
    Temporary1 = [116,114,117,101];
    }
    else {
    Temporary1 = tmp_1291845669[1];
    }
    
    var value_1291845675 = nimCopy(null, Temporary1, NTI33554449);
    result_1291845668 = nimCopy(result_1291845668, {Field0: nimCopy(null, prefix_1291845670, NTI33554449), Field1: nimCopy(null, name_1291845671, NTI33554449), Field2: nimCopy(null, value_1291845675, NTI33554449)}, NTI1291845655);

  return result_1291845668;

}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function nsuNormalize(s_805306523) {
  var result_805306524 = [];

    result_805306524 = nimCopy(null, mnewString((s_805306523).length), NTI33554449);
    var j_805306525 = 0;
    Label1: {
      var i_805306530 = 0;
      var colontmp__553648665 = 0;
      colontmp__553648665 = ((s_805306523).length - 1);
      var res_553648666 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_553648666 <= colontmp__553648665)) break Label3;
            i_805306530 = res_553648666;
            if ((ConstSet4[s_805306523[i_805306530]] != undefined)) {
            result_805306524[j_805306525] = (s_805306523[i_805306530] + 32);
            j_805306525 += 1;
            }
            else {
            if (!((s_805306523[i_805306530] == 95))) {
            result_805306524[j_805306525] = s_805306523[i_805306530];
            j_805306525 += 1;
            }
            }
            res_553648666 += 1;
          }
      };
    };
    if (!((j_805306525 == (s_805306523).length))) {
    if (result_805306524.length < j_805306525) { for (var i = result_805306524.length; i < j_805306525; ++i) result_805306524.push(0); }
         else {result_805306524.length = j_805306525; };
    }
    

  return result_805306524;

}

function parseBool_805307469(s_805307470) {
  var result_805307471 = false;

    switch (toJSStr(nsuNormalize(s_805307470))) {
    case "y":
    case "yes":
    case "true":
    case "1":
    case "on":
      result_805307471 = true;
      break;
    case "n":
    case "no":
    case "false":
    case "0":
    case "off":
      result_805307471 = false;
      break;
    default: 
      raiseException({message: ([99,97,110,110,111,116,32,105,110,116,101,114,112,114,101,116,32,97,115,32,97,32,98,111,111,108,58,32] || []).concat(s_805307470 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_805307471;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function integerOutOfRangeError_738197829() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_738197831(s_738197832, b_738197833, b_738197833_Idx) {
      var Temporary1;
          var Temporary4;

  var result_738197834 = 0;

    var sign_738197835 = (-1n);
    var i_738197836 = 0;
    if ((i_738197836 < (s_738197832).length)) {
    if ((s_738197832[i_738197836] == 43)) {
    i_738197836 += 1;
    }
    else {
    if ((s_738197832[i_738197836] == 45)) {
    i_738197836 += 1;
    sign_738197835 = 1n;
    }
    }
    }
    
      if (!(i_738197836 < (s_738197832).length)) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_738197832[i_738197836]] != undefined);      }    if (Temporary1) {
    b_738197833[b_738197833_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_738197836 < (s_738197832).length)) Temporary4 = false; else {            Temporary4 = (ConstSet6[s_738197832[i_738197836]] != undefined);          }        if (!Temporary4) break Label3;
          var c_738197870 = (s_738197832[i_738197836] - 48);
          if ((((-9223372036854775808n) + BigInt(c_738197870)) / 10n <= b_738197833[b_738197833_Idx])) {
          b_738197833[b_738197833_Idx] = ((b_738197833[b_738197833_Idx] * 10n) - BigInt(c_738197870));
          }
          else {
          integerOutOfRangeError_738197829();
          }
          
          i_738197836 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_738197836 < (s_738197832).length) && (s_738197832[i_738197836] == 95))) break Label6;
                i_738197836 += 1;
              }
          };
        }
    };
    if (((sign_738197835 == (-1n)) && (b_738197833[b_738197833_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_738197829();
    }
    else {
      b_738197833[b_738197833_Idx] = (b_738197833[b_738197833_Idx] * sign_738197835);
      result_738197834 = i_738197836;
    }
    
    }
    

  return result_738197834;

}

function npuParseBiggestInt(s_738197893, number_738197894, number_738197894_Idx) {
  var result_738197895 = 0;

    var res_738197896 = [0n];
    result_738197895 = rawParseInt_738197831(s_738197893, res_738197896, 0);
    if (!((result_738197895 == 0))) {
    number_738197894[number_738197894_Idx] = res_738197896[0];
    }
    

  return result_738197895;

}

function npuParseInt(s_738197898, number_738197899, number_738197899_Idx) {
  var result_738197900 = 0;

    var res_738197901 = [0n];
    result_738197900 = npuParseBiggestInt(s_738197898, res_738197901, 0);
    if (((res_738197901[0] < (-2147483648n)) || (2147483647n < res_738197901[0]))) {
    integerOutOfRangeError_738197829();
    }
    
    if (!((result_738197900 == 0))) {
    number_738197899[number_738197899_Idx] = Number(res_738197901[0]);
    }
    

  return result_738197900;

}

function parseInt_738198411(s_738198412, number_738198413, number_738198413_Idx, start_738198414) {
  var result_738198415 = 0;

    result_738198415 = npuParseInt((s_738198412.slice(start_738198414, (s_738198412).length - 1 + 1)), number_738198413, number_738198413_Idx);

  return result_738198415;

}

function nsuParseInt(s_805307219) {
  var result_805307220 = [0];

    result_805307220[0] = 0;
    var L_805307221 = parseInt_738198411(s_805307219, result_805307220, 0, 0);
    if ((!((L_805307221 == (s_805307219).length)) || (L_805307221 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_805307219 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_805307220[0];

}

function getVarType_1073747268(x_1073747269, isRawNumber_1073747270, isRawNumber_1073747270_Idx) {
        var Temporary1;

  var result_1073747271 = 0;

  BeforeRet: {
    result_1073747271 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1073747269)))) {
    case "[object Array]":
      result_1073747271 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1073747271 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1073747269)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1073747269) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1073747269)) {
      result_1073747271 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1073747270[isRawNumber_1073747270_Idx] = true;
        result_1073747271 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1073747271 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1073747271 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1073747271 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1073747271 = 4;
      break BeforeRet;
      break;
    default: 
      break;
    }
  };

  return result_1073747271;

}

function newJArray_1073742002() {
  var result_1073742003 = null;

    result_1073742003 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1073742003;

}

function len_1073747287(x_1073747288) {
  var result_1073747289 = 0;

          result_1073747289 = x_1073747288.length;
    

  return result_1073747289;

}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = (old_301990096 + n_301990095), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_553648678 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_553648678 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_553648678;
            result_301990092[result_301990092_Idx][(old_301990096 + iHEX60gensym4_301990110)] = x_301990093.charCodeAt((start_301990094 + iHEX60gensym4_301990110));
            i_553648678 += 1;
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990129(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_369098760(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}

function add_1073742124(father_1073742125, child_1073742126) {
    var Temporary1;

    var Temporary1 = father_1073742125;
    if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1073741827)); }
    Temporary1.elems.push(child_1073742126);;

  
}

function imul_1090519352(a_1090519353, b_1090519354) {
  var result_1090519355 = 0;

    var mask_1090519356 = 65535;
    var aHi_1090519361 = (((a_1090519353 >>> 16) & mask_1090519356) >>> 0);
    var aLo_1090519362 = ((a_1090519353 & mask_1090519356) >>> 0);
    var bHi_1090519367 = (((b_1090519354 >>> 16) & mask_1090519356) >>> 0);
    var bLo_1090519368 = ((b_1090519354 & mask_1090519356) >>> 0);
    result_1090519355 = ((((aLo_1090519362 * bLo_1090519368) >>> 0) + ((((((aHi_1090519361 * bLo_1090519368) >>> 0) + ((aLo_1090519362 * bHi_1090519367) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);

  return result_1090519355;

}

function rotl32_1090519373(x_1090519374, r_1090519375) {
  var result_1090519376 = 0;

    result_1090519376 = ((((x_1090519374 << r_1090519375) >>> 0) | (x_1090519374 >>> (32 - r_1090519375))) >>> 0);

  return result_1090519376;

}

function murmurHash_1090519385(x_1090519386) {
  var result_1090519387 = 0;

  BeforeRet: {
    var size_1090519396 = (x_1090519386).length;
    var stepSize_1090519397 = 4;
    var n_1090519398 = Math.trunc(size_1090519396 / stepSize_1090519397);
    var h1_1090519399 = 0;
    var i_1090519400 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1090519400 < (n_1090519398 * stepSize_1090519397))) break Label2;
          var k1_1090519401 = 0;
          var j_1090519402 = stepSize_1090519397;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1090519402)) break Label4;
                j_1090519402 -= 1;
                k1_1090519401 = ((((k1_1090519401 << 8) >>> 0) | x_1090519386[(i_1090519400 + j_1090519402)]) >>> 0);
              }
          };
          i_1090519400 += stepSize_1090519397;
          k1_1090519401 = imul_1090519352(k1_1090519401, 3432918353);
          k1_1090519401 = rotl32_1090519373(k1_1090519401, 15);
          k1_1090519401 = imul_1090519352(k1_1090519401, 461845907);
          h1_1090519399 = ((h1_1090519399 ^ k1_1090519401) >>> 0);
          h1_1090519399 = rotl32_1090519373(h1_1090519399, 13);
          h1_1090519399 = ((((h1_1090519399 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1090519421 = 0;
    var rem_1090519422 = Math.trunc(size_1090519396 % stepSize_1090519397);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1090519422)) break Label6;
          rem_1090519422 -= 1;
          k1_1090519421 = ((((k1_1090519421 << 8) >>> 0) | x_1090519386[(i_1090519400 + rem_1090519422)]) >>> 0);
        }
    };
    k1_1090519421 = imul_1090519352(k1_1090519421, 3432918353);
    k1_1090519421 = rotl32_1090519373(k1_1090519421, 15);
    k1_1090519421 = imul_1090519352(k1_1090519421, 461845907);
    h1_1090519399 = ((h1_1090519399 ^ k1_1090519421) >>> 0);
    h1_1090519399 = ((h1_1090519399 ^ size_1090519396) >>> 0);
    h1_1090519399 = ((h1_1090519399 ^ (h1_1090519399 >>> 16)) >>> 0);
    h1_1090519399 = imul_1090519352(h1_1090519399, 2246822507);
    h1_1090519399 = ((h1_1090519399 ^ (h1_1090519399 >>> 13)) >>> 0);
    h1_1090519399 = imul_1090519352(h1_1090519399, 3266489909);
    h1_1090519399 = ((h1_1090519399 ^ (h1_1090519399 >>> 16)) >>> 0);
    result_1090519387 = Number(BigInt.asIntN(32, BigInt(h1_1090519399)));
    break BeforeRet;
  };

  return result_1090519387;

}

function hash_1090519487(x_1090519488) {
  var result_1090519489 = 0;

    result_1090519489 = murmurHash_1090519385((x_1090519488.slice(0, (x_1090519488).length - 1 + 1)));

  return result_1090519489;

}

function isFilled_1124073503(hcode_1124073504) {
  var result_1124073505 = false;

    result_1124073505 = !((hcode_1124073504 == 0));

  return result_1124073505;

}

function nextTry_1124073506(h_1124073507, maxHash_1124073508) {
  var result_1124073509 = 0;

    result_1124073509 = ((h_1124073507 + 1) & maxHash_1124073508);

  return result_1124073509;

}

function rawGet_1073742258(t_1073742261, key_1073742262, hc_1073742263, hc_1073742263_Idx) {
  var result_1073742264 = 0;

  BeforeRet: {
    hc_1073742263[hc_1073742263_Idx] = hash_1090519487(key_1073742262);
    if ((hc_1073742263[hc_1073742263_Idx] == 0)) {
    hc_1073742263[hc_1073742263_Idx] = 314159265;
    }
    
    if (((t_1073742261.data).length == 0)) {
    result_1073742264 = (-1);
    break BeforeRet;
    }
    
    var h_1073742315 = (hc_1073742263[hc_1073742263_Idx] & (t_1073742261.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1124073503(t_1073742261.data[h_1073742315].Field0)) break Label2;
          if (((t_1073742261.data[h_1073742315].Field0 == hc_1073742263[hc_1073742263_Idx]) && eqStrings(t_1073742261.data[h_1073742315].Field2, key_1073742262))) {
          result_1073742264 = h_1073742315;
          break BeforeRet;
          }
          
          h_1073742315 = nextTry_1124073506(h_1073742315, (t_1073742261.data).length - 1);
        }
    };
    result_1073742264 = ((-1) - h_1073742315);
  };

  return result_1073742264;

}

function mustRehash_1073742600(t_1073742602) {
  var result_1073742603 = false;

    result_1073742603 = ((((t_1073742602.data).length * 2) < (t_1073742602.counter * 3)) || (((t_1073742602.data).length - t_1073742602.counter) < 4));

  return result_1073742603;

}

function rawInsert_1073743176(t_1073743179, data_1073743180, data_1073743180_Idx, key_1073743181, val_1073743182, hc_1073743183, h_1073743184) {
    data_1073743180[data_1073743180_Idx][h_1073743184].Field2 = nimCopy(null, key_1073743181, NTI33554449);
    data_1073743180[data_1073743180_Idx][h_1073743184].Field3 = val_1073743182;
    data_1073743180[data_1073743180_Idx][h_1073743184].Field0 = hc_1073743183;
    data_1073743180[data_1073743180_Idx][h_1073743184].Field1 = (-1);
    if ((t_1073743179.first < 0)) {
    t_1073743179.first = h_1073743184;
    }
    
    if ((0 <= t_1073743179.last)) {
    data_1073743180[data_1073743180_Idx][t_1073743179.last].Field1 = h_1073743184;
    }
    
    t_1073743179.last = h_1073743184;

  
}

function enlarge_1073742761(t_1073742764) {
          var Temporary6;
          var Temporary7;

    var n_1073742767 = [];
    n_1073742767 = new Array(((t_1073742764.data).length * 2)); for (var i = 0 ; i < ((t_1073742764.data).length * 2) ; ++i) { n_1073742767[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1073742819 = t_1073742764.first;
    t_1073742764.first = (-1);
    t_1073742764.last = (-1);
    var Temporary1 = t_1073742764.data; t_1073742764.data = n_1073742767; n_1073742767 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1073742819)) break Label3;
          var nxt_1073742877 = n_1073742767[h_1073742819].Field1;
          var eh_1073742931 = n_1073742767[h_1073742819].Field0;
          if (isFilled_1124073503(eh_1073742931)) {
          var j_1073742935 = (eh_1073742931 & (t_1073742764.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1124073503(t_1073742764.data[j_1073742935].Field0)) break Label5;
                j_1073742935 = nextTry_1124073506(j_1073742935, (t_1073742764.data).length - 1);
              }
          };
          Temporary6 = n_1073742767[h_1073742819].Field2;
          n_1073742767[h_1073742819].Field2 = genericReset(n_1073742767[h_1073742819].Field2, NTI33554449);
          Temporary7 = n_1073742767[h_1073742819].Field3;
          n_1073742767[h_1073742819].Field3 = genericReset(n_1073742767[h_1073742819].Field3, NTI1073741828);
          rawInsert_1073743176(t_1073742764, t_1073742764, "data", Temporary6, Temporary7, n_1073742767[h_1073742819].Field0, j_1073742935);
          }
          
          h_1073742819 = nxt_1073742877;
        }
    };

  
}

function rawGetKnownHC_1073743458(t_1073743461, key_1073743462, hc_1073743463) {
  var result_1073743464 = 0;

  BeforeRet: {
    if (((t_1073743461.data).length == 0)) {
    result_1073743464 = (-1);
    break BeforeRet;
    }
    
    var h_1073743515 = (hc_1073743463 & (t_1073743461.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1124073503(t_1073743461.data[h_1073743515].Field0)) break Label2;
          if (((t_1073743461.data[h_1073743515].Field0 == hc_1073743463) && eqStrings(t_1073743461.data[h_1073743515].Field2, key_1073743462))) {
          result_1073743464 = h_1073743515;
          break BeforeRet;
          }
          
          h_1073743515 = nextTry_1124073506(h_1073743515, (t_1073743461.data).length - 1);
        }
    };
    result_1073743464 = ((-1) - h_1073743515);
  };

  return result_1073743464;

}

function HEX5BHEX5DHEX3D_1073742189(t_1073742192, key_1073742193, val_1073742194) {
    if (((t_1073742192.data).length == 0)) {
    var correctSizeHEX60gensym13_1073742244 = slotsNeeded_1124073514(32);
    t_1073742192.counter = 0;
    t_1073742192.data = new Array(correctSizeHEX60gensym13_1073742244); for (var i = 0 ; i < correctSizeHEX60gensym13_1073742244 ; ++i) { t_1073742192.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1073742192.first = (-1);
    t_1073742192.last = (-1);
    }
    
    var hc_1073742249 = [0];
    var index_1073742493 = rawGet_1073742258(t_1073742192, key_1073742193, hc_1073742249, 0);
    if ((0 <= index_1073742493)) {
    t_1073742192.data[index_1073742493].Field3 = val_1073742194;
    }
    else {
      if (((t_1073742192.data).length == 0)) {
      var correctSizeHEX60gensym18_1073742595 = slotsNeeded_1124073514(32);
      t_1073742192.counter = 0;
      t_1073742192.data = new Array(correctSizeHEX60gensym18_1073742595); for (var i = 0 ; i < correctSizeHEX60gensym18_1073742595 ; ++i) { t_1073742192.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1073742192.first = (-1);
      t_1073742192.last = (-1);
      }
      
      if (mustRehash_1073742600(t_1073742192)) {
      enlarge_1073742761(t_1073742192);
      index_1073742493 = rawGetKnownHC_1073743458(t_1073742192, key_1073742193, hc_1073742249[0]);
      }
      
      index_1073742493 = ((-1) - index_1073742493);
      rawInsert_1073743176(t_1073742192, t_1073742192, "data", key_1073742193, val_1073742194, hc_1073742249[0], index_1073742493);
      t_1073742192.counter += 1;
    }
    

  
}

function HEX5BHEX5DHEX3D_1073743851(obj_1073743852, key_1073743853, val_1073743854) {
    var Temporary1;

    var Temporary1 = obj_1073743852;
    if (ConstSet8[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1073741827)); }
    HEX5BHEX5DHEX3D_1073742189(Temporary1.fields, key_1073743853, val_1073743854);

  
}

function newJInt_1073741943(n_1073741944) {
  var result_1073741945 = null;

    result_1073741945 = {kind: 2, num: n_1073741944, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741945;

}

function newJFloat_1073741946(n_1073741947) {
  var result_1073741948 = null;

    result_1073741948 = {kind: 3, fnum: n_1073741947, isUnquoted: false, str: [], num: 0n, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741948;

}

function newJRawNumber_1073741940(s_1073741941) {
  var result_1073741942 = null;

    result_1073741942 = {kind: 4, str: nimCopy(null, s_1073741941, NTI33554449), isUnquoted: true, num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741942;

}

function newJString_1073741866(s_1073741867) {
  var result_1073741868 = null;

    result_1073741868 = {kind: 4, str: nimCopy(null, s_1073741867, NTI33554449), isUnquoted: false, num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741868;

}

function newJBool_1073741949(b_1073741950) {
  var result_1073741951 = null;

    result_1073741951 = {kind: 1, bval: b_1073741950, isUnquoted: false, str: [], num: 0n, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741951;

}

function newJNull_1073741952() {
  var result_1073741953 = null;

    result_1073741953 = {kind: 0, isUnquoted: false, str: [], num: 0n, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1073741953;

}

function convertObject_1073747290(x_1073747291) {
  var result_1073747292 = null;

    var isRawNumber_1073747293 = [false];
    switch (getVarType_1073747268(x_1073747291, isRawNumber_1073747293, 0)) {
    case 6:
      result_1073747292 = newJArray_1073742002();
      Label1: {
        var i_1073747298 = 0;
        var colontmp__553648671 = 0;
        colontmp__553648671 = len_1073747287(x_1073747291);
        var i_553648672 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_553648672 < colontmp__553648671)) break Label3;
              i_1073747298 = i_553648672;
              add_1073742124(result_1073747292, convertObject_1073747290(x_1073747291[i_1073747298]));
              i_553648672 += 1;
            }
        };
      };
      break;
    case 5:
      result_1073747292 = newJObject_1073741954();
      for (var property in x_1073747291) {
        if (x_1073747291.hasOwnProperty(property)) {
      
      var nimProperty_1073747299 = null;
      var nimValue_1073747300 = null;
      nimProperty_1073747299 = property; nimValue_1073747300 = x_1073747291[property];
      HEX5BHEX5DHEX3D_1073743851(result_1073747292, cstrToNimstr(nimProperty_1073747299), convertObject_1073747290(nimValue_1073747300));
      }}
      break;
    case 2:
      result_1073747292 = newJInt_1073741943(BigInt((x_1073747291)));
      break;
    case 3:
      result_1073747292 = newJFloat_1073741946((x_1073747291));
      break;
    case 4:
      if (isRawNumber_1073747293[0]) {
      var value_1073747309 = null;
      value_1073747309 = x_1073747291.toString();
      result_1073747292 = newJRawNumber_1073741940(cstrToNimstr(value_1073747309));
      }
      else {
        result_1073747292 = newJString_1073741866(cstrToNimstr((x_1073747291)));
      }
      
      break;
    case 1:
      result_1073747292 = newJBool_1073741949((x_1073747291));
      break;
    case 0:
      result_1073747292 = newJNull_1073741952();
      break;
    }

  return result_1073747292;

}

function parseJson_1073747318(buffer_1073747319) {
  var result_1073747320 = null;

  BeforeRet: {
    result_1073747320 = convertObject_1073747290(JSON.parse(toJSStr(buffer_1073747319)));
    break BeforeRet;
  };

  return result_1073747320;

}

function find_973078582(a_973078585, item_973078586) {
  var result_973078587 = 0;

  BeforeRet: {
    result_973078587 = 0;
    Label1: {
      var i_973078591 = [];
      var i_553648696 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648696 < (a_973078585).length)) break Label3;
            i_973078591 = a_973078585[i_553648696];
            if (eqStrings(i_973078591, item_973078586)) {
            break BeforeRet;
            }
            
            result_973078587 += 1;
            i_553648696 += 1;
          }
      };
    };
    result_973078587 = (-1);
  };

  return result_973078587;

}

function contains_973078577(a_973078579, item_973078580) {
  var result_973078581 = false;

  BeforeRet: {
    result_973078581 = (0 <= find_973078582(a_973078579, item_973078580));
    break BeforeRet;
  };

  return result_973078581;

}

function deduplicate_553648343(s_553648345, isSorted_553648346) {
  var result_553648347 = [];

    result_553648347 = nimCopy(null, [], NTI553648451);
    if ((0 < (s_553648345).length)) {
    if (isSorted_553648346) {
    var prev_553648355 = nimCopy(null, s_553648345[0], NTI33554449);
    var Temporary1 = nimCopy(null, prev_553648355, NTI33554449);
    result_553648347.push(Temporary1);;
    Label2: {
      var i_553648367 = 0;
      var colontmp__553648688 = 0;
      colontmp__553648688 = (s_553648345).length - 1;
      var res_553648689 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_553648689 <= colontmp__553648688)) break Label4;
            i_553648367 = res_553648689;
            if (!(eqStrings(s_553648345[i_553648367], prev_553648355))) {
            prev_553648355 = nimCopy(null, s_553648345[i_553648367], NTI33554449);
            var Temporary5 = nimCopy(null, prev_553648355, NTI33554449);
            result_553648347.push(Temporary5);;
            }
            
            res_553648689 += 1;
          }
      };
    };
    }
    else {
      Label6: {
        var itm_553648375 = [];
        var i_553648693 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_553648693 < (s_553648345).length)) break Label8;
              itm_553648375 = s_553648345[i_553648693];
              if (!(contains_973078577(result_553648347, itm_553648375))) {
              var Temporary9 = nimCopy(null, itm_553648375, NTI33554449);
              result_553648347.push(Temporary9);;
              }
              
              i_553648693 += 1;
            }
        };
      };
    }
    
    }
    

  return result_553648347;

}

function del_553648469(x_553648471, x_553648471_Idx, i_553648472) {
    var xl_553648476 = ((x_553648471[x_553648471_Idx]).length - 1);
    x_553648471[x_553648471_Idx][i_553648472] = x_553648471[x_553648471_Idx][xl_553648476];
    if (x_553648471[x_553648471_Idx].length < xl_553648476) { for (var i = x_553648471[x_553648471_Idx].length ; i < xl_553648476 ; ++i) x_553648471[x_553648471_Idx].push([]); }
               else { x_553648471[x_553648471_Idx].length = xl_553648476; };

  
}

function binarySearch_553648407(a_553648410, key_553648411, cmp_553648414) {
  var result_553648415 = 0;

  BeforeRet: {
    var len_553648419 = (a_553648410).length;
    if ((len_553648419 == 0)) {
    result_553648415 = (-1);
    break BeforeRet;
    }
    
    if ((len_553648419 == 1)) {
    if ((cmp_553648414(a_553648410[0], key_553648411) == 0)) {
    result_553648415 = 0;
    break BeforeRet;
    }
    else {
      result_553648415 = (-1);
      break BeforeRet;
    }
    
    }
    
    result_553648415 = 0;
    if (((len_553648419 & (len_553648419 - 1)) == 0)) {
    var step_553648424 = (len_553648419 >> 1);
    var cmpRes_553648425 = 0;
    Label1: {
        Label2: while (true) {
        if (!(0 < step_553648424)) break Label2;
          var i_553648426 = (result_553648415 | step_553648424);
          cmpRes_553648425 = cmp_553648414(a_553648410[i_553648426], key_553648411);
          if ((cmpRes_553648425 == 0)) {
          result_553648415 = i_553648426;
          break BeforeRet;
          }
          
          if ((cmpRes_553648425 < 0)) {
          result_553648415 = i_553648426;
          }
          
          step_553648424 = (step_553648424 >> 1);
        }
    };
    if (!((cmp_553648414(a_553648410[result_553648415], key_553648411) == 0))) {
    result_553648415 = (-1);
    }
    
    }
    else {
      var b_553648431 = len_553648419;
      var cmpRes_553648432 = 0;
      Label3: {
          Label4: while (true) {
          if (!(result_553648415 < b_553648431)) break Label4;
            var mid_553648437 = ((result_553648415 + b_553648431) >> 1);
            cmpRes_553648432 = cmp_553648414(a_553648410[mid_553648437], key_553648411);
            if ((cmpRes_553648432 == 0)) {
            result_553648415 = mid_553648437;
            break BeforeRet;
            }
            
            if ((cmpRes_553648432 < 0)) {
            result_553648415 = (mid_553648437 + 1);
            }
            else {
              b_553648431 = mid_553648437;
            }
            
          }
      };
      if (((len_553648419 <= result_553648415) || !((cmp_553648414(a_553648410[result_553648415], key_553648411) == 0)))) {
      result_553648415 = (-1);
      }
      
    }
    
  };

  return result_553648415;

}

function cmp_553648400(x_553648402, y_553648403) {
  var result_553648404 = 0;

  BeforeRet: {
    if (eqStrings(x_553648402, y_553648403)) {
    result_553648404 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_553648402, y_553648403) < 0)) {
    result_553648404 = (-1);
    break BeforeRet;
    }
    
    result_553648404 = 1;
    break BeforeRet;
  };

  return result_553648404;

}

function binarySearch_553648395(a_553648397, key_553648398) {
  var result_553648399 = 0;

    result_553648399 = binarySearch_553648407(a_553648397, key_553648398, cmp_553648400);

  return result_553648399;

}

function parseSaturatedNatural_738197910(s_738197911, b_738197912, b_738197912_Idx) {
      var Temporary1;
          var Temporary4;

  var result_738197913 = 0;

    var i_738197914 = 0;
    if (((i_738197914 < (s_738197911).length) && (s_738197911[i_738197914] == 43))) {
    i_738197914 += 1;
    }
    
      if (!(i_738197914 < (s_738197911).length)) Temporary1 = false; else {        Temporary1 = (ConstSet13[s_738197911[i_738197914]] != undefined);      }    if (Temporary1) {
    b_738197912[b_738197912_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_738197914 < (s_738197911).length)) Temporary4 = false; else {            Temporary4 = (ConstSet14[s_738197911[i_738197914]] != undefined);          }        if (!Temporary4) break Label3;
          var c_738197943 = (s_738197911[i_738197914] - 48);
          if ((b_738197912[b_738197912_Idx] <= Math.trunc((2147483647 - c_738197943) / 10))) {
          b_738197912[b_738197912_Idx] = ((b_738197912[b_738197912_Idx] * 10) + c_738197943);
          }
          else {
            b_738197912[b_738197912_Idx] = 2147483647;
          }
          
          i_738197914 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_738197914 < (s_738197911).length) && (s_738197911[i_738197914] == 95))) break Label6;
                i_738197914 += 1;
              }
          };
        }
    };
    result_738197913 = i_738197914;
    }
    

  return result_738197913;

}

function parseSaturatedNatural_738198416(s_738198417, b_738198418, b_738198418_Idx, start_738198419) {
  var result_738198420 = 0;

    result_738198420 = parseSaturatedNatural_738197910((s_738198417.slice(start_738198419, (s_738198417).length - 1 + 1)), b_738198418, b_738198418_Idx);

  return result_738198420;

}

function HEX5BHEX5D_805307669(s_805307672, x_805307673) {
  var result_805307674 = [];

    var a_805307676 = x_805307673.a;
    var L_805307678 = ((((s_805307672).length - x_805307673.b) - a_805307676) + 1);
    result_805307674 = nimCopy(null, mnewString(L_805307678), NTI33554449);
    Label1: {
      var i_805307683 = 0;
      var i_553648703 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_553648703 < L_805307678)) break Label3;
            i_805307683 = i_553648703;
            result_805307674[i_805307683] = s_805307672[(i_805307683 + a_805307676)];
            i_553648703 += 1;
          }
      };
    };

  return result_805307674;

}

function HEX2EHEX2E_973078632(a_973078635, b_973078636) {
  var result_973078639 = ({a: 0, b: 0});

    result_973078639 = nimCopy(result_973078639, {a: a_973078635, b: b_973078636}, NTI973078613);

  return result_973078639;

}

function parseStandardFormatSpecifier_721420344(s_721420345, start_721420346, ignoreUnknownSuffix_721420347) {
      var Temporary1;
      var Temporary2;

  var result_721420348 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420348.fill = 32;
    result_721420348.align = 0;
    result_721420348.sign = 45;
    var i_721420350 = start_721420346;
    if ((((i_721420350 + 1) < (s_721420345).length) && (ConstSet9[s_721420345[(i_721420350 + 1)]] != undefined))) {
    result_721420348.fill = s_721420345[i_721420350];
    result_721420348.align = s_721420345[(i_721420350 + 1)];
    i_721420350 += 2;
    }
    else {
    if (((i_721420350 < (s_721420345).length) && (ConstSet10[s_721420345[i_721420350]] != undefined))) {
    result_721420348.align = s_721420345[i_721420350];
    i_721420350 += 1;
    }
    }
    if (((i_721420350 < (s_721420345).length) && (ConstSet11[s_721420345[i_721420350]] != undefined))) {
    result_721420348.sign = s_721420345[i_721420350];
    i_721420350 += 1;
    }
    
    if (((i_721420350 < (s_721420345).length) && (s_721420345[i_721420350] == 35))) {
    result_721420348.alternateForm = true;
    i_721420350 += 1;
    }
    
      if (!(((i_721420350 + 1) < (s_721420345).length) && (s_721420345[i_721420350] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet12[s_721420345[(i_721420350 + 1)]] != undefined);      }    if (Temporary1) {
    result_721420348.padWithZero = true;
    i_721420350 += 1;
    }
    
    var parsedLength_721420392 = parseSaturatedNatural_738198416(s_721420345, result_721420348, "minimumWidth", i_721420350);
    i_721420350 += parsedLength_721420392;
    if (((i_721420350 < (s_721420345).length) && (s_721420345[i_721420350] == 46))) {
    i_721420350 += 1;
    var parsedLengthB_721420403 = parseSaturatedNatural_738198416(s_721420345, result_721420348, "precision", i_721420350);
    i_721420350 += parsedLengthB_721420403;
    }
    else {
      result_721420348.precision = (-1);
    }
    
      if (!(i_721420350 < (s_721420345).length)) Temporary2 = false; else {        Temporary2 = (ConstSet15[s_721420345[i_721420350]] != undefined);      }    if (Temporary2) {
    result_721420348.typ = s_721420345[i_721420350];
    i_721420350 += 1;
    }
    
    result_721420348.endPosition = i_721420350;
    if ((!((i_721420350 == (s_721420345).length)) && !(ignoreUnknownSuffix_721420347))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_805307669(s_721420345, HEX2EHEX2E_973078632(i_721420350, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420348;

}

function nucruneLen(s_754974748) {
  var result_754974749 = 0;

    result_754974749 = 0;
    var i_754974750 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_754974750 < (s_754974748).length)) break Label2;
          if ((s_754974748[i_754974750] <= 127)) {
          i_754974750 += 1;
          }
          else {
          if (((s_754974748[i_754974750] >>> 5) == 6)) {
          i_754974750 += 2;
          }
          else {
          if (((s_754974748[i_754974750] >>> 4) == 14)) {
          i_754974750 += 3;
          }
          else {
          if (((s_754974748[i_754974750] >>> 3) == 30)) {
          i_754974750 += 4;
          }
          else {
          if (((s_754974748[i_754974750] >>> 2) == 62)) {
          i_754974750 += 5;
          }
          else {
          if (((s_754974748[i_754974750] >>> 1) == 126)) {
          i_754974750 += 6;
          }
          else {
          i_754974750 += 1;
          }
          }}}}}
          result_754974749 += 1;
        }
    };

  return result_754974749;

}

function runeLen_754981907(s_754981908) {
  var result_754981909 = 0;

    result_754981909 = nucruneLen((s_754981908.slice(0, (s_754981908).length - 1 + 1)));

  return result_754981909;

}

function runeLenAt_754974814(s_754974815, i_754974816) {
  var result_754974817 = 0;

    if ((s_754974815[i_754974816] <= 127)) {
    result_754974817 = 1;
    }
    else {
    if (((s_754974815[i_754974816] >>> 5) == 6)) {
    result_754974817 = 2;
    }
    else {
    if (((s_754974815[i_754974816] >>> 4) == 14)) {
    result_754974817 = 3;
    }
    else {
    if (((s_754974815[i_754974816] >>> 3) == 30)) {
    result_754974817 = 4;
    }
    else {
    if (((s_754974815[i_754974816] >>> 2) == 62)) {
    result_754974817 = 5;
    }
    else {
    if (((s_754974815[i_754974816] >>> 1) == 126)) {
    result_754974817 = 6;
    }
    else {
      result_754974817 = 1;
    }
    }}}}}

  return result_754974817;

}

function runeOffset_754975436(s_754975437, pos_754975438, start_754975439) {
  var result_754975440 = 0;

  BeforeRet: {
    var i_754975441 = 0;
    var o_754975442 = start_754975439;
    Label1: {
        Label2: while (true) {
        if (!(i_754975441 < pos_754975438)) break Label2;
          o_754975442 += runeLenAt_754974814(s_754975437, o_754975442);
          if (((s_754975437).length <= o_754975442)) {
          result_754975440 = (-1);
          break BeforeRet;
          }
          
          i_754975441 += 1;
        }
    };
    result_754975440 = o_754975442;
    break BeforeRet;
  };

  return result_754975440;

}

function runeOffset_754982082(s_754982083, pos_754982084, start_754982085) {
  var result_754982086 = 0;

    result_754982086 = runeOffset_754975436((s_754982083.slice(0, (s_754982083).length - 1 + 1)), pos_754982084, start_754982085);

  return result_754982086;

}

function validateUtf8_754975056(s_754975057) {
  var result_754975058 = 0;

  BeforeRet: {
    var i_754975059 = 0;
    var L_754975063 = (s_754975057).length;
    Label1: {
        Label2: while (true) {
        if (!(i_754975059 < L_754975063)) break Label2;
          if ((s_754975057[i_754975059] <= 127)) {
          i_754975059 += 1;
          }
          else {
          if (((s_754975057[i_754975059] >>> 5) == 6)) {
          if ((s_754975057[i_754975059] < 194)) {
          result_754975058 = i_754975059;
          break BeforeRet;
          }
          
          if ((((i_754975059 + 1) < L_754975063) && ((s_754975057[(i_754975059 + 1)] >>> 6) == 2))) {
          i_754975059 += 2;
          }
          else {
            result_754975058 = i_754975059;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_754975057[i_754975059] >>> 4) == 14)) {
          if (((((i_754975059 + 2) < L_754975063) && ((s_754975057[(i_754975059 + 1)] >>> 6) == 2)) && ((s_754975057[(i_754975059 + 2)] >>> 6) == 2))) {
          i_754975059 += 3;
          }
          else {
            result_754975058 = i_754975059;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_754975057[i_754975059] >>> 3) == 30)) {
          if ((((((i_754975059 + 3) < L_754975063) && ((s_754975057[(i_754975059 + 1)] >>> 6) == 2)) && ((s_754975057[(i_754975059 + 2)] >>> 6) == 2)) && ((s_754975057[(i_754975059 + 3)] >>> 6) == 2))) {
          i_754975059 += 4;
          }
          else {
            result_754975058 = i_754975059;
            break BeforeRet;
          }
          
          }
          else {
            result_754975058 = i_754975059;
            break BeforeRet;
          }
          }}}
        }
    };
    result_754975058 = (-1);
    break BeforeRet;
  };

  return result_754975058;

}

function validateUtf8_754982079(s_754982080) {
  var result_754982081 = 0;

    result_754982081 = validateUtf8_754975056((s_754982080.slice(0, (s_754982080).length - 1 + 1)));

  return result_754982081;

}

function nsuRepeatChar(c_805307483, count_805307484) {
  var result_805307485 = [];

    result_805307485 = nimCopy(null, mnewString(count_805307484), NTI33554449);
    Label1: {
      var i_805307490 = 0;
      var colontmp__553648709 = 0;
      colontmp__553648709 = (count_805307484 - 1);
      var res_553648710 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_553648710 <= colontmp__553648709)) break Label3;
            i_805307490 = res_553648710;
            result_805307485[i_805307490] = c_805307483;
            res_553648710 += 1;
          }
      };
    };

  return result_805307485;

}

function alignString_721420306(s_721420307, minimumWidth_721420308, align_721420309, fill_721420310) {
      var Temporary1;

  var result_721420311 = [];

    if ((minimumWidth_721420308 == 0)) {
    result_721420311 = nimCopy(null, s_721420307, NTI33554449);
    }
    else {
      if ((validateUtf8_754982079(s_721420307) == (-1))) {
      Temporary1 = runeLen_754981907(s_721420307);
      }
      else {
      Temporary1 = (s_721420307).length;
      }
      
      var sRuneLen_721420312 = Temporary1;
      var toFill_721420313 = (minimumWidth_721420308 - sRuneLen_721420312);
      if ((toFill_721420313 <= 0)) {
      result_721420311 = nimCopy(null, s_721420307, NTI33554449);
      }
      else {
      if (((align_721420309 == 60) || (align_721420309 == 0))) {
      result_721420311 = nimCopy(null, (s_721420307 || []).concat(nsuRepeatChar(fill_721420310, toFill_721420313) || []), NTI33554449);
      }
      else {
      if ((align_721420309 == 94)) {
      var half_721420314 = Math.trunc(toFill_721420313 / 2);
      result_721420311 = nimCopy(null, (nsuRepeatChar(fill_721420310, half_721420314) || []).concat(s_721420307 || [],nsuRepeatChar(fill_721420310, (toFill_721420313 - half_721420314)) || []), NTI33554449);
      }
      else {
        result_721420311 = nimCopy(null, (nsuRepeatChar(fill_721420310, toFill_721420313) || []).concat(s_721420307 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420311;

}

function formatValue_721420457(result_721420458, result_721420458_Idx, value_721420459, specifier_721420460) {
    var Temporary1;

    var spec_721420461 = parseStandardFormatSpecifier_721420344(specifier_721420460, 0, false);
    var value_721420462 = nimCopy(null, value_721420459, NTI33554449);
    switch (spec_721420461.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420461.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420461.precision == (-1)))) {
    if ((spec_721420461.precision < runeLen_754981907(value_721420462))) {
    if (value_721420462.length < (Temporary1 = runeOffset_754982082(value_721420462, spec_721420461.precision, 0), Temporary1)) { for (var i = value_721420462.length; i < Temporary1; ++i) value_721420462.push(0); }
         else {value_721420462.length = Temporary1; };
    }
    
    }
    
    result_721420458[result_721420458_Idx].push.apply(result_721420458[result_721420458_Idx], alignString_721420306(value_721420462, spec_721420461.minimumWidth, spec_721420461.align, spec_721420461.fill));;

  
}

function formatValue_553648508(result_553648510, result_553648510_Idx, value_553648511, specifier_553648512) {
    formatValue_721420457(result_553648510, result_553648510_Idx, nimBoolToStr(value_553648511), specifier_553648512);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr((48 + v_721420294)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(((Temporary1 + v_721420294) - 10)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_553648521(n_553648523, radix_553648524, spec_553648525) {
    var Temporary1;

  var result_553648526 = [];

    var n_553648529 = BigInt(n_553648523);
    var negative_553648530 = (n_553648529 < 0n);
    if (negative_553648530) {
    Temporary1 = BigInt.asUintN(64, (BigInt.asUintN(64, ~(n_553648529)) + 1n));
    }
    else {
    Temporary1 = BigInt.asUintN(64, n_553648529);
    }
    
    var v_553648531 = Temporary1;
    var xx_553648532 = [];
    if (spec_553648525.alternateForm) {
    switch (spec_553648525.typ) {
    case 88:
      xx_553648532 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_553648532 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_553648532 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_553648532 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_553648531 == 0n)) {
    result_553648526 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_553648526 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0n < v_553648531)) break Label3;
            var d_553648533 = (v_553648531 % BigInt.asUintN(64, BigInt(radix_553648524)));
            v_553648531 = BigInt.asUintN(64, (v_553648531 / BigInt.asUintN(64, BigInt(radix_553648524))));
            result_553648526.push.apply(result_553648526, mkDigit_721420293(Number(d_553648533), spec_553648525.typ));;
          }
      };
      Label4: {
        var idx_553648538 = 0;
        var colontmp__553648714 = 0;
        colontmp__553648714 = Math.trunc((result_553648526).length / 2);
        var i_553648715 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_553648715 < colontmp__553648714)) break Label6;
              idx_553648538 = i_553648715;
              var Temporary7 = result_553648526[idx_553648538]; result_553648526[idx_553648538] = result_553648526[(((result_553648526).length - idx_553648538) - 1)]; result_553648526[(((result_553648526).length - idx_553648538) - 1)] = Temporary7;              i_553648715 += 1;
            }
        };
      };
    }
    
    if (spec_553648525.padWithZero) {
    var sign_553648543 = (negative_553648530 || !((spec_553648525.sign == 45)));
    var toFill_553648547 = (((spec_553648525.minimumWidth - (result_553648526).length) - (xx_553648532).length) - (sign_553648543 ? 1 : 0));
    if ((0 < toFill_553648547)) {
    result_553648526 = nimCopy(null, (nsuRepeatChar(48, toFill_553648547) || []).concat(result_553648526 || []), NTI33554449);
    }
    
    }
    
    if (negative_553648530) {
    result_553648526 = nimCopy(null, ([45] || []).concat(xx_553648532 || [],result_553648526 || []), NTI33554449);
    }
    else {
    if (!((spec_553648525.sign == 45))) {
    result_553648526 = nimCopy(null, [spec_553648525.sign].concat(xx_553648532 || [],result_553648526 || []), NTI33554449);
    }
    else {
      result_553648526 = nimCopy(null, (xx_553648532 || []).concat(result_553648526 || []), NTI33554449);
    }
    }
    if ((spec_553648525.align == 60)) {
    Label8: {
      var i_553648552 = 0;
      var colontmp__553648718 = 0;
      colontmp__553648718 = (result_553648526).length;
      var i_553648719 = colontmp__553648718;
      Label9: {
          Label10: while (true) {
          if (!(i_553648719 < spec_553648525.minimumWidth)) break Label10;
            i_553648552 = i_553648719;
            addChar(result_553648526, spec_553648525.fill);;
            i_553648719 += 1;
          }
      };
    };
    }
    else {
      var toFill_553648553 = (spec_553648525.minimumWidth - (result_553648526).length);
      if ((spec_553648525.align == 94)) {
      var half_553648554 = Math.trunc(toFill_553648553 / 2);
      result_553648526 = nimCopy(null, (nsuRepeatChar(spec_553648525.fill, half_553648554) || []).concat(result_553648526 || [],nsuRepeatChar(spec_553648525.fill, (toFill_553648553 - half_553648554)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_553648553)) {
        result_553648526 = nimCopy(null, (nsuRepeatChar(spec_553648525.fill, toFill_553648553) || []).concat(result_553648526 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_553648526;

}

function formatValue_553648513(result_553648515, result_553648515_Idx, value_553648516, specifier_553648517) {
  BeforeRet: {
    if (((specifier_553648517).length == 0)) {
    result_553648515[result_553648515_Idx].push.apply(result_553648515[result_553648515_Idx], HEX24_369098760(value_553648516));;
    break BeforeRet;
    }
    
    var spec_553648518 = parseStandardFormatSpecifier_721420344(specifier_553648517, 0, false);
    var radix_553648519 = 10;
    switch (spec_553648518.typ) {
    case 120:
    case 88:
      radix_553648519 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_553648519 = 2;
      break;
    case 111:
      radix_553648519 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_553648518.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_553648515[result_553648515_Idx].push.apply(result_553648515[result_553648515_Idx], formatInt_553648521(value_553648516, radix_553648519, spec_553648518));;
  };

  
}

function addEscapedChar_33558019(s_33558020, s_33558020_Idx, c_33558021) {
    switch (c_33558021) {
    case 7:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,97]);;
      break;
    case 8:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,98]);;
      break;
    case 9:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,116]);;
      break;
    case 10:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,110]);;
      break;
    case 11:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,118]);;
      break;
    case 12:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,102]);;
      break;
    case 13:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,114]);;
      break;
    case 27:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,101]);;
      break;
    case 92:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,92]);;
      break;
    case 39:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,39]);;
      break;
    case 34:
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33558020[s_33558020_Idx], c_33558021);;
      break;
    default: 
      s_33558020[s_33558020_Idx].push.apply(s_33558020[s_33558020_Idx], [92,120]);;
      var n_33558031 = c_33558021;
      addChar(s_33558020[s_33558020_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][((n_33558031 & 240) >> 4)]);;
      addChar(s_33558020[s_33558020_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][(n_33558031 & 15)]);;
      break;
    }

  
}

function addQuoted_553648579(s_553648581, s_553648581_Idx, x_553648582) {
    s_553648581[s_553648581_Idx].push.apply(s_553648581[s_553648581_Idx], [34]);;
    Label1: {
      var c_553648583 = 0;
      var i_553648726 = 0;
      var L_553648727 = (x_553648582).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648726 < L_553648727)) break Label3;
            c_553648583 = x_553648582[i_553648726];
            if ((c_553648583 <= 127)) {
            addEscapedChar_33558019(s_553648581, s_553648581_Idx, c_553648583);
            }
            else {
            addChar(s_553648581[s_553648581_Idx], c_553648583);;
            }
            
            i_553648726 += 1;
          }
      };
    };
    s_553648581[s_553648581_Idx].push.apply(s_553648581[s_553648581_Idx], [34]);;

  
}

function collectionToString_553648564(x_553648566, prefix_553648567, separator_553648568, suffix_553648569) {
  var result_553648570 = [[]];

    result_553648570[0] = nimCopy(null, prefix_553648567, NTI33554449);
    var firstElement_553648571 = true;
    Label1: {
      var value_553648575 = [];
      var i_553648722 = 0;
      var L_553648723 = (x_553648566).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648722 < L_553648723)) break Label3;
            value_553648575 = x_553648566[i_553648722];
            if (firstElement_553648571) {
            firstElement_553648571 = false;
            }
            else {
            result_553648570[0].push.apply(result_553648570[0], separator_553648568);;
            }
            
            addQuoted_553648579(result_553648570, 0, value_553648575);
            i_553648722 += 1;
          }
      };
    };
    result_553648570[0].push.apply(result_553648570[0], suffix_553648569);;

  return result_553648570[0];

}

function HEX24_553648560(x_553648562) {
  var result_553648563 = [];

    result_553648563 = nimCopy(null, collectionToString_553648564(x_553648562, [64,91], [44,32], [93]), NTI33554449);

  return result_553648563;

}

function formatValue_553648555(result_553648557, result_553648557_Idx, value_553648558, specifier_553648559) {
    formatValue_721420457(result_553648557, result_553648557_Idx, HEX24_553648560(value_553648558), specifier_553648559);

  
}

function len_1073744060(t_1073744063) {
  var result_1073744064 = 0;

    result_1073744064 = t_1073744063.counter;

  return result_1073744064;

}

function len_1073744986(n_1073744987) {
      var Temporary1;
      var Temporary2;

  var result_1073744988 = 0;

    switch (n_1073744987.kind) {
    case 6:
      var Temporary1 = n_1073744987;
      if (ConstSet16[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1073741827)); }
      result_1073744988 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1073744987;
      if (ConstSet17[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1073741827)); }
      result_1073744988 = len_1073744060(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1073744988;

}

function toHexImpl_805307138(x_805307139, len_805307140, handleNegative_805307141) {
  var result_805307142 = [];

    var n_805307144 = x_805307139;
    result_805307142 = nimCopy(null, mnewString(len_805307140), NTI33554449);
    Label1: {
      var j_805307150 = 0;
      var colontmp__553648747 = 0;
      colontmp__553648747 = (len_805307140 - 1);
      var res_553648749 = colontmp__553648747;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_553648749)) break Label3;
            j_805307150 = res_553648749;
            result_805307142[j_805307150] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][(n_805307144 & 15n)];
            n_805307144 = (n_805307144 >> BigInt(4));
            if (((n_805307144 == 0n) && handleNegative_805307141)) {
            n_805307144 = 18446744073709551615n;
            }
            
            res_553648749 -= 1;
          }
      };
    };

  return result_805307142;

}

function toHex_805308346(x_805308348, len_805308349) {
  var result_805308350 = [];

    result_805308350 = nimCopy(null, toHexImpl_805307138(BigInt.asUintN(64, BigInt(x_805308348)), len_805308349, (x_805308348 < 0)), NTI33554449);

  return result_805308350;

}

function escapeJsonUnquoted_1073746347(s_1073746348, result_1073746349, result_1073746349_Idx) {
    Label1: {
      var c_1073746350 = 0;
      var i_553648743 = 0;
      var L_553648744 = (s_1073746348).length;
      Label2: {
          Label3: while (true) {
          if (!(i_553648743 < L_553648744)) break Label3;
            c_1073746350 = s_1073746348[i_553648743];
            switch (c_1073746350) {
            case 10:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,110]);;
              break;
            case 8:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,98]);;
              break;
            case 12:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,102]);;
              break;
            case 9:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,116]);;
              break;
            case 11:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,114]);;
              break;
            case 34:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1073746350) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], ([92,117,48,48] || []).concat(toHex_805308346(c_1073746350, 2) || []));;
              break;
            case 92:
              result_1073746349[result_1073746349_Idx].push.apply(result_1073746349[result_1073746349_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1073746349[result_1073746349_Idx], c_1073746350);;
              break;
            }
            i_553648743 += 1;
          }
      };
    };

  
}

function escapeJson_1073746368(s_1073746369, result_1073746370, result_1073746370_Idx) {
    result_1073746370[result_1073746370_Idx].push.apply(result_1073746370[result_1073746370_Idx], [34]);;
    escapeJsonUnquoted_1073746347(s_1073746369, result_1073746370, result_1073746370_Idx);
    result_1073746370[result_1073746370_Idx].push.apply(result_1073746370[result_1073746370_Idx], [34]);;

  
}

function nimFloatToString_385876129(a_385876130) {
  var result_385876131 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876130))
      result_385876131 = a_385876130 === 0 && 1 / a_385876130 < 0 ? "-0.0" : a_385876130+".0"
    else {
      result_385876131 = a_385876130+""
      if(nimOnlyDigitsOrMinus(result_385876131)){
        result_385876131 = a_385876130+".0"
      }
    }
  

  return result_385876131;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_385876129(x_33557566));

  
}

function toUgly_1073746378(result_1073746379, result_1073746379_Idx, node_1073746380) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1073746381 = false;
    switch (node_1073746380.kind) {
    case 6:
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [91]);;
      Label1: {
        var child_1073746385 = null;
        var colontmp__553648730 = [];
        var Temporary2 = node_1073746380;
        if (ConstSet18[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1073741827)); }
        colontmp__553648730 = Temporary2.elems;
        var i_553648732 = 0;
        var L_553648733 = (colontmp__553648730).length;
        Label3: {
            Label4: while (true) {
            if (!(i_553648732 < L_553648733)) break Label4;
              child_1073746385 = colontmp__553648730[i_553648732];
              if (comma_1073746381) {
              result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [44]);;
              }
              else {
                comma_1073746381 = true;
              }
              
              toUgly_1073746378(result_1073746379, result_1073746379_Idx, child_1073746385);
              i_553648732 += 1;
            }
        };
      };
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [93]);;
      break;
    case 5:
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [123]);;
      Label5: {
        var key_1073746390 = [];
        var value_1073746391 = null;
        var colontmp__553648736 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1073746380;
        if (ConstSet19[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1073741827)); }
        colontmp__553648736 = nimCopy(colontmp__553648736, Temporary6.fields, NTI1073741838);
        var L_553648738 = len_1073744060(colontmp__553648736);
        if ((0 < colontmp__553648736.counter)) {
        var h_553648739 = colontmp__553648736.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_553648739)) break Label8;
              var nxt_553648741 = colontmp__553648736.data[h_553648739].Field1;
              if (isFilled_1124073503(colontmp__553648736.data[h_553648739].Field0)) {
              key_1073746390 = colontmp__553648736.data[h_553648739].Field2;
              value_1073746391 = colontmp__553648736.data[h_553648739].Field3;
              if (comma_1073746381) {
              result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [44]);;
              }
              else {
                comma_1073746381 = true;
              }
              
              escapeJson_1073746368(key_1073746390, result_1073746379, result_1073746379_Idx);
              result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [58]);;
              toUgly_1073746378(result_1073746379, result_1073746379_Idx, value_1073746391);
              }
              
              h_553648739 = nxt_553648741;
            }
        };
        }
        
      };
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [125]);;
      break;
    case 4:
      if (node_1073746380.isUnquoted) {
      var Temporary9 = node_1073746380;
      if (ConstSet20[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1073741827)); }
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1073746380;
        if (ConstSet21[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1073741827)); }
      escapeJson_1073746368(Temporary10.str, result_1073746379, result_1073746379_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1073746380;
      if (ConstSet22[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1073741827)); }
      addInt_301990111(result_1073746379, result_1073746379_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1073746380;
      if (ConstSet23[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1073741827)); }
      addFloat_33557563(result_1073746379, result_1073746379_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1073746380;
        if (ConstSet24[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1073741827)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], Temporary13);;
      break;
    case 0:
      result_1073746379[result_1073746379_Idx].push.apply(result_1073746379[result_1073746379_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1073746482(node_1073746483) {
  var result_1073746484 = [[]];

    result_1073746484[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1073746378(result_1073746484, 0, node_1073746483);

  return result_1073746484[0];

}

function formatValue_553648584(result_553648586, result_553648586_Idx, value_553648587, specifier_553648588) {
    formatValue_721420457(result_553648586, result_553648586_Idx, HEX24_1073746482(value_553648587), specifier_553648588);

  
}
var identNamesThatIsSet_553648172 = [[]];
var path_553648186 = [[46]];
var help_553648187 = [false];
var name_553648188 = [[]];
var level_553648189 = [0];
var definitions_553648190 = [[]];
var config_553648191 = [newJObject_1073741954()];
var srcHEX60gensym1_553648196 = [[45,45,112,97,116,104,58,102,111,111], [45,45,108,101,118,101,108,58,49]];
Label1: {
  var part_553648173 = [[]];
  var i_553648639 = 0;
  var L_553648640 = (srcHEX60gensym1_553648196).length;
  Label2: {
      Label3: while (true) {
      if (!(i_553648639 < L_553648640)) break Label3;
        part_553648173[0] = srcHEX60gensym1_553648196[i_553648639];
        var tmpTuple_553648216 = getParam_1291845666(part_553648173[0]);
        var prefix_553648174 = nimCopy(null, tmpTuple_553648216["Field0"], NTI33554449);
        var name_553648175 = nimCopy(null, tmpTuple_553648216["Field1"], NTI33554449);
        var value_553648176 = nimCopy(null, tmpTuple_553648216["Field2"], NTI33554449);
        switch (toJSStr(prefix_553648174)) {
        case "--path":
        case "-p":
++excHandler;
          try {
          identNamesThatIsSet_553648172[0].push([112,97,116,104]);;
          path_553648186[0] = nimCopy(null, value_553648176, NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [112,97,116,104], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [115,116,114,105,110,103], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        case "--help":
        case "-h":
++excHandler;
          try {
          identNamesThatIsSet_553648172[0].push([104,101,108,112]);;
          help_553648187[0] = parseBool_805307469(value_553648176);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [104,101,108,112], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [98,111,111,108], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        case "--name":
++excHandler;
          try {
          identNamesThatIsSet_553648172[0].push([110,97,109,101]);;
          name_553648188[0] = nimCopy(null, value_553648176, NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [110,97,109,101], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [115,116,114,105,110,103], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        case "--level":
++excHandler;
          try {
          identNamesThatIsSet_553648172[0].push([108,101,118,101,108]);;
          level_553648189[0] = nsuParseInt(value_553648176);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [108,101,118,101,108], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [105,110,116], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        case "--define":
        case "-d":
++excHandler;
          try {
          var Temporary9 = nimCopy(null, value_553648176, NTI33554449);
          definitions_553648190[0].push(Temporary9);;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [100,101,102,105,110,105,116,105,111,110,115], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [115,116,114,105,110,103], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        case "--config":
++excHandler;
          try {
          identNamesThatIsSet_553648172[0].push([99,111,110,102,105,103]);;
          config_553648191[0] = parseJson_1073747318(value_553648176);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], [99,111,110,102,105,103], [34,32,105,115,32,115,101,116,32,116,111,32,34], value_553648176, [34,32,98,117,116,32,99,97,110,32,110,111,116,32,98,101,32,112,97,114,115,101,100,32,116,111,32,34], [74,115,111,110,78,111,100,101], [34,46]);
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          break;
        default: 
          rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], name_553648175, [34,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,44,32,34], part_553648173[0], [34,32,105,115,32,105,103,110,111,114,101,100,46]);
          break;
        }
        i_553648639 += 1;
      }
  };
};
var deduplicatedHEX60gensym16_553648384 = deduplicate_553648343(identNamesThatIsSet_553648172[0], false);
if (!(((identNamesThatIsSet_553648172[0]).length == (deduplicatedHEX60gensym16_553648384).length))) {
Label11: {
  var identHEX60gensym16_553648394 = [[]];
  var i_553648643 = 0;
  var L_553648644 = (deduplicatedHEX60gensym16_553648384).length;
  Label12: {
      Label13: while (true) {
      if (!(i_553648643 < L_553648644)) break Label13;
        identHEX60gensym16_553648394[0] = deduplicatedHEX60gensym16_553648384[i_553648643];
        del_553648469(identNamesThatIsSet_553648172, 0, binarySearch_553648395(identNamesThatIsSet_553648172[0], identHEX60gensym16_553648394[0]));
        if (contains_973078577(identNamesThatIsSet_553648172[0], identHEX60gensym16_553648394[0])) {
        rawEcho([87,97,114,110,105,110,103,58,32,79,112,116,105,111,110,32,34], identHEX60gensym16_553648394[0], [34,32,105,115,32,115,101,116,32,102,111,114,32,109,117,108,116,105,112,108,101,32,116,105,109,101,115,46,32,79,110,108,121,32,116,104,101,32,108,97,115,116,32,111,110,101,32,119,105,108,108,32,98,101,32,117,115,101,100,46]);
        }
        
        i_553648643 += 1;
      }
  };
};
}

Label14: {
  var fmtRes_553648498 = [mnewString(0)];
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [112,97,116,104,61]);;
  formatValue_721420457(fmtRes_553648498, 0, path_553648186[0], []);
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [44,32]);;
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [104,101,108,112,61]);;
  formatValue_553648508(fmtRes_553648498, 0, help_553648187[0], []);
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [44,32]);;
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [110,97,109,101,61]);;
  formatValue_721420457(fmtRes_553648498, 0, name_553648188[0], []);
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [44,32]);;
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [108,101,118,101,108,61]);;
  formatValue_553648513(fmtRes_553648498, 0, level_553648189[0], []);
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [44,32]);;
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [100,101,102,105,110,105,116,105,111,110,115,61]);;
  formatValue_553648555(fmtRes_553648498, 0, definitions_553648190[0], []);
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [44,32]);;
  fmtRes_553648498[0].push.apply(fmtRes_553648498[0], [99,111,110,102,105,103,61]);;
  formatValue_553648584(fmtRes_553648498, 0, config_553648191[0], []);
};
rawEcho(fmtRes_553648498[0]);
